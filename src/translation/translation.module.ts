/**
 * @fileoverview Module de traduction intelligente O'Ypunu avec IA
 * 
 * Ce module impl√©mente un syst√®me de traduction sophistiqu√© avec
 * intelligence artificielle, apprentissage automatique et validation
 * communautaire pour garantir la qualit√© et la coh√©rence des traductions.
 * 
 * @author √âquipe O'Ypunu
 * @version 1.0.0
 * @since 2025-01-01
 */

import { Module } from '@nestjs/common';
import { MongooseModule } from '@nestjs/mongoose';

// Nouveaux sch√©mas pour le syst√®me de traduction
import {
  TranslationGroup,
  TranslationGroupSchema,
} from './schemas/translation-group.schema';
import {
  TrainingData,
  TrainingDataSchema,
} from './schemas/training-data.schema';

// Services
import { TranslationService } from './services/translation.service';
import { SimilarityService } from './services/similarity.service';
import { LearningService } from './services/learning.service';

// Contr√¥leurs
import { TranslationController } from './controllers/translation.controller';

// Modules existants
import { UsersModule } from '../users/users.module';
import { RepositoriesModule } from '../repositories/repositories.module';

/**
 * Module de traduction intelligente O'Ypunu
 * 
 * Orchestration compl√®te d'un syst√®me de traduction avanc√© avec
 * intelligence artificielle, apprentissage adaptatif et validation
 * communautaire pour l'excellence multilingue du dictionnaire.
 * 
 * ## üß† Intelligence artificielle :
 * 
 * ### üîç D√©tection intelligente des doublons
 * - **SimilarityService** : Algorithmes de similarit√© s√©mantique avanc√©s
 * - **Fuzzy matching** : D√©tection de traductions quasi-identiques
 * - **Analyse contextuelle** : Comparaison des nuances linguistiques
 * 
 * ### üìä Apprentissage automatique
 * - **LearningService** : Syst√®me d'apprentissage adaptatif
 * - **Seuils dynamiques** : Auto-ajustement des crit√®res de validation
 * - **Feedback utilisateur** : Am√©lioration continue par les interactions
 * 
 * ### üéØ Validation communautaire
 * - **TranslationGroup** : Groupement de traductions similaires
 * - **Votes pond√©r√©s** : Syst√®me de validation par la communaut√©
 * - **Fusion intelligente** : Combinaison optimale des traductions
 * 
 * ## üìã Sch√©mas de donn√©es :
 * - **TranslationGroup** : Groupes de traductions similaires avec scoring
 * - **TrainingData** : Donn√©es d'entra√Ænement pour l'IA et m√©triques
 * 
 * ## üîÑ Services sp√©cialis√©s :
 * - **TranslationService** : Logique m√©tier principale des traductions
 * - **SimilarityService** : Algorithmes de comparaison et scoring
 * - **LearningService** : Machine learning et optimisation continue
 * 
 * ## üåê Int√©grations :
 * - **UsersModule** : Gestion des contributeurs et r√©putation
 * - **RepositoriesModule** : Acc√®s aux donn√©es avec pattern Repository
 * - **Architecture modulaire** : Extensibilit√© et maintenance facilit√©e
 * 
 * @class TranslationModule
 * @version 1.0.0
 */
@Module({
  imports: [
    // Importer seulement les sch√©mas sp√©cifiques au module translation
    MongooseModule.forFeature([
      // Nouveaux sch√©mas pour les traductions intelligentes
      { name: TranslationGroup.name, schema: TranslationGroupSchema },
      { name: TrainingData.name, schema: TrainingDataSchema },
    ]),

    // Importer les repositories pour acc√©der aux donn√©es
    RepositoriesModule,
    // Importer le module Users pour acc√©der aux services utilisateur
    UsersModule,
  ],
  controllers: [TranslationController],
  providers: [
    // Services principaux
    TranslationService,
    SimilarityService,
    LearningService,
  ],
  exports: [
    // Exporter les services pour utilisation dans d'autres modules
    TranslationService,
    SimilarityService,
    LearningService,
  ],
})
export class TranslationModule {
  /**
   * Constructeur du module de traduction avec initialisation des logs
   */
  constructor() {    console.log('   ‚úÖ Algorithme de similarit√© s√©mantique');
    console.log('   ‚úÖ Apprentissage adaptatif');
    console.log('   ‚úÖ D√©tection automatique de doublons');
    console.log('   ‚úÖ API RESTful compl√®te');
  }
}

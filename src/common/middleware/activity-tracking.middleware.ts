import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { User } from '../../users/schemas/user.schema';

@Injectable()
export class ActivityTrackingMiddleware implements NestMiddleware {
  constructor(@InjectModel(User.name) private userModel: Model<User>) {}

  async use(req: Request, res: Response, next: NextFunction) {
    try {
      // V√©rifier si l'utilisateur est authentifi√©
      const user = req.user as any;

      console.log(
        'üîÑ ActivityTrackingMiddleware - Route:',
        req.method,
        req.url,
      );
      console.log(
        'üë§ User dans request:',
        user
          ? `${user.userId || user._id} (${user.username || 'unknown'})`
          : 'non authentifi√©',
      );

      if (user && (user.userId || user._id)) {
        const userId = user.userId || user._id;
        console.log('‚úÖ Mise √† jour lastActive pour:', userId);

        // Mettre √† jour lastActive de mani√®re asynchrone pour ne pas bloquer la requ√™te
        this.updateUserActivity(userId).catch((error) => {
          console.error(
            "‚ùå Erreur lors de la mise √† jour de l'activit√© utilisateur:",
            error,
          );
        });
      } else {
        console.log("‚è≠Ô∏è Pas d'utilisateur authentifi√©, pas de mise √† jour");
      }
    } catch (error) {
      console.error('üí• Erreur dans ActivityTrackingMiddleware:', error);
    }

    next();
  }

  private async updateUserActivity(userId: string): Promise<void> {
    try {
      const result = await this.userModel.findByIdAndUpdate(
        userId,
        {
          lastActive: new Date(),
          // Marquer comme actif si ce n'√©tait pas d√©j√† le cas
          isActive: true,
        },
        { new: true },
      );

      if (result) {
        console.log(
          '‚úÖ lastActive mis √† jour pour:',
          result.username,
          '√†',
          result.lastActive,
        );
      } else {
        console.log('‚ö†Ô∏è Utilisateur non trouv√© pour la mise √† jour:', userId);
      }
    } catch (error) {
      console.error('‚ùå Erreur lors de la mise √† jour de lastActive:', error);
    }
  }
}

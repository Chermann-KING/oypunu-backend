/**
 * @fileoverview Module racine de l'application O'Ypunu
 * 
 * Ce module centralise l'architecture compl√®te de l'application avec
 * orchestration de tous les modules m√©tier, configuration des services
 * globaux, middleware et int√©grations pour un dictionnaire social multilingue.
 * 
 * @author √âquipe O'Ypunu
 * @version 1.0.0
 * @since 2025-01-01
 */

import { Module, MiddlewareConsumer, NestModule, RequestMethod } from "@nestjs/common";
import { MongooseModule } from "@nestjs/mongoose";
import { ConfigModule, ConfigService } from "@nestjs/config";
import { EventEmitterModule } from "@nestjs/event-emitter";
import { productionConfig } from "./config/production.config";
// import { RedisModule } from '@nestjs-modules/ioredis';
import { AppController } from "./app.controller";
import { AppService } from "./app.service";
import { AuthModule } from "./auth/auth.module";
import { UsersModule } from "./users/users.module";
import { SecurityModule } from "./auth/security/security.module";
import { AdminModule } from "./admin/admin.module";
import { DictionaryModule } from "./dictionary/dictionary.module";
import { HomeModule } from "./home/home.module";
import { CommunitiesModule } from "./communities/communities.module";
import { MessagingModule } from "./messaging/messaging.module";
import { TranslationModule } from "./translation/translation.module";
import { LanguagesModule } from "./languages/languages.module";
import { ActivityModule } from "./common/activity.module";
import { RecommendationsModule } from "./recommendations/recommendations.module";
// ‚ú® NOUVEAUX MODULES - Endpoints manquants ajout√©s
import { AnalyticsModule } from "./analytics/analytics.module";
import { ModerationModule } from "./moderation/moderation.module";
import { SearchModule } from "./search/search.module";
import { AchievementsModule } from "./achievements/achievements.module";
import { SocialModule } from "./social/social.module";
import { ActivityTrackingMiddleware } from "./common/middleware/activity-tracking.middleware";
// import { LessonsModule } from './lessons/lessons.module';

/**
 * Module racine de l'application O'Ypunu
 * 
 * Architecture centrale orchestrant un √©cosyst√®me complet de dictionnaire
 * social multilingue avec intelligence artificielle, communaut√©s interactives
 * et fonctionnalit√©s avanc√©es d'apprentissage linguistique.
 * 
 * ## üèóÔ∏è Architecture modulaire :
 * 
 * ### üîß Configuration et infrastructure
 * - **ConfigModule** : Configuration globale avec variables d'environnement
 * - **MongooseModule** : Connexion MongoDB avec gestion d'erreurs robuste
 * - **EventEmitterModule** : Syst√®me d'√©v√©nements pour communication inter-modules
 * - **Redis (pr√©par√©)** : Cache distribu√© pour performances optimales
 * 
 * ### üîê Authentification et s√©curit√©
 * - **SecurityModule** : Protection avanc√©e JWT et validation s√©curis√©e
 * - **AuthModule** : Authentification compl√®te avec OAuth et 2FA
 * - **UsersModule** : Gestion des profils et pr√©f√©rences utilisateur
 * 
 * ### üìö Dictionnaire et contenu
 * - **DictionaryModule** : C≈ìur du dictionnaire avec gestion compl√®te des mots
 * - **LanguagesModule** : Support multilingue avec 50+ langues
 * - **TranslationModule** : Traductions intelligentes avec IA
 * 
 * ### ü§ù Fonctionnalit√©s sociales
 * - **CommunitiesModule** : Communaut√©s linguistiques avec forums
 * - **MessagingModule** : Syst√®me de messagerie temps r√©el avec WebSocket
 * - **SocialModule** : Interactions sociales (likes, partages, commentaires)
 * 
 * ### üß† Intelligence artificielle
 * - **RecommendationsModule** : Recommandations personnalis√©es avec ML
 * - **SearchModule** : Recherche avanc√©e avec suggestions intelligentes
 * - **AnalyticsModule** : Analytics comportementaux et m√©triques avanc√©es
 * 
 * ### üéÆ Engagement utilisateur
 * - **AchievementsModule** : Syst√®me de badges et gamification
 * - **ActivityModule** : Tracking d'activit√© pour personnalisation
 * - **ModerationModule** : Mod√©ration communautaire et signalements
 * 
 * ### üè† Interface et administration
 * - **HomeModule** : Tableau de bord et interface principale
 * - **AdminModule** : Interface d'administration compl√®te
 * 
 * ## üîÑ Middleware et int√©grations :
 * - **ActivityTrackingMiddleware** : Suivi d'activit√© pour analytics
 * - **Exclusions intelligentes** : Optimisation pour endpoints publics
 * - **Event-driven architecture** : Communication asynchrone entre modules
 * 
 * @class AppModule
 * @implements {NestModule}
 * @version 1.0.0
 */
@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
      load: [productionConfig],
      cache: true,
      expandVariables: true,
    }),
    EventEmitterModule.forRoot({
      wildcard: false,
      delimiter: ".",
      newListener: false,
      removeListener: false,
      maxListeners: 10,
      verboseMemoryLeak: false,
      ignoreErrors: false,
    }),
    MongooseModule.forRootAsync({
      imports: [ConfigModule],
      useFactory: async (configService: ConfigService) => {
        const databaseConfig = configService.get('database');
        
        if (!databaseConfig?.uri) {
          throw new Error(
            "Configuration database manquante ou MONGODB_URI non d√©finie"
          );
        }
        
        return {
          uri: databaseConfig.uri,
          ...databaseConfig.options, // Utilise la config de production (pooling, SSL, etc.)
        };
      },
      inject: [ConfigService],
    }),
    // RedisModule.forRootAsync({
    //   imports: [ConfigModule],
    //   useFactory: async (configService: ConfigService) => {
    //     const redisUrl = configService.get<string>("REDIS_URL");
    //     if (!redisUrl) {
    //       // Fallback vers une configuration locale si REDIS_URL n'est pas d√©finie
    //       return {
    //         type: 'single',
    //         options: {
    //           host: 'localhost',
    //           port: 6379,
    //         },
    //       };
    //     }
    //     return {
    //       type: 'single',
    //       options: {
    //         url: redisUrl,
    //       },
    //     };
    //   },
    //   inject: [ConfigService],
    // }),
    SecurityModule,
    AuthModule,
    UsersModule,
    DictionaryModule,
    HomeModule,
    CommunitiesModule,
    MessagingModule,
    AdminModule,
    TranslationModule,
    LanguagesModule,
    ActivityModule,
    RecommendationsModule,
    // ‚ú® NOUVEAUX MODULES - Fonctionnalit√©s avanc√©es
    AnalyticsModule,      // üìä Dashboard et m√©triques admin
    ModerationModule,     // üõ°Ô∏è Signalements et mod√©ration
    SearchModule,         // üîç Recherche avanc√©e avec suggestions
    AchievementsModule,   // üèÜ Syst√®me de badges et gamification
    SocialModule,         // üë• Fonctionnalit√©s sociales (likes, partages, commentaires)
    // LessonsModule,
  ],
  controllers: [AppController],
  providers: [AppService],
})
export class AppModule implements NestModule {
  /**
   * Configure les middleware globaux de l'application
   * 
   * Impl√©mente une strat√©gie de middleware intelligente avec tracking
   * d'activit√© s√©lectif pour optimiser les performances tout en
   * maintenant une visibilit√© compl√®te sur l'usage de l'API.
   * 
   * @method configure
   * @param {MiddlewareConsumer} consumer - Consumer NestJS pour configuration middleware
   * 
   * ## üéØ Strat√©gie de middleware :
   * 
   * ### üìä ActivityTrackingMiddleware appliqu√© globalement
   * - **Tracking intelligent** : Suivi d'activit√© pour analytics et personnalisation
   * - **Performance optimis√©e** : Exclusions sur endpoints non critiques
   * - **Donn√©es comportementales** : Base pour recommandations et m√©triques
   * 
   * ### üö´ Exclusions strat√©giques :
   * - **Page d'accueil (/)** : Endpoint public sans tracking n√©cessaire
   * - **Authentification** : /auth/login, /auth/register pour performance
   * - **Analytics publiques** : Endpoints de monitoring et statistiques
   * - **Donn√©es syst√®me** : /users/allusers pour √©viter boucles infinies
   * 
   * @example
   * // Le middleware sera appliqu√© √† tous ces endpoints :
   * // GET /api/words - ‚úÖ Track√©s
   * // POST /api/words/{id}/favorite - ‚úÖ Track√©s  
   * // GET /auth/login - ‚ùå Exclus pour performance
   */
  configure(consumer: MiddlewareConsumer) {
    consumer
      .apply(ActivityTrackingMiddleware)
      .exclude(
        "/",
        "/auth/login",
        "/auth/register",
        "/users/analytics/online-contributors",
        "/users/allusers",
        { path: "/admin/*", method: RequestMethod.ALL }
      )
      .forRoutes("*"); // Appliquer aux routes qui peuvent √™tre authentifi√©es
  }
}
